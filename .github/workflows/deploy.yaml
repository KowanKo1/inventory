name: Deploy to VM GCP

on:
  push:
    branches:
      - deploytest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_NAME_INVENTORY }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_NAME_INVENTORY }}:latest

      - name: Use SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy
        run: |
          sudo apt-get update && sudo apt-get install -y openssh-client
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_STATIC_IP }} '
            sudo docker container rm -f ${{ secrets.CONTAINER_NAME_INVENTORY }} || true &&
            sudo docker image rm -f ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_NAME_INVENTORY }}:latest || true &&
            sudo docker run --name ${{ secrets.CONTAINER_NAME_INVENTORY }} --restart unless-stopped -d -p 8001:8001 \
            --network host \
            -e DB_PATH="${{ secrets.DB_PATH }}" \
            -e TRANSACTION_SERVICE_URL="http://localhost:8002" \
            -e INVENTORY_SERVICE_URL="http://localhost:8001" \
            -e AUTHENTICATION_SERVICE_URL="http://localhost:8000" \
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_NAME_INVENTORY }}:latest'